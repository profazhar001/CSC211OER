<?xml version="1.0"?>
<section xml:id="chapter11_constructors">
  <title>Constructors</title>
  <p>Another function we wrote in <xref ref="chapter9_time"/> was <c>makeTime</c>:</p>
  <program>Time makeTime(double secs) {
  Time time;
  time.hour = int(secs / 3600.0);
  secs -= time.hour * 3600.0;
  time.minute = int(secs / 60.0);
  secs -= time.minute * 60.0;
  time.second = secs;
  return time;
}</program>
  <p>Of course, for every new type, we need to be able to create new objects. In fact, functions
    like <c>makeTime</c> are so common that there is a special function syntax for them. These functions are
    called <term>constructors</term> and the syntax looks like this:</p>
  <program>Time::Time(double secs) {
  hour = int(secs / 3600.0);
  secs -= hour * 3600.0;
  minute = int(secs / 60.0);
  secs -= minute * 60.0;
  second = secs;
}</program>
  <p>First, notice that the constructor has the same name as the class, and
    no return type. The arguments haven't changed, though.</p>
  <p>Second, notice that we don't have to create a new time object, and we don't have to return
    anything. Both of these steps are handled automatically. We can refer to the new
    object&#x2014;the one we are constructing&#x2014;using the keyword <c>this</c>, or implicitly as
    shown here. When we write values to <c>hour</c>, <c>minute</c> and <c>second</c>, the compiler knows we are
    referring to the instance variables of the new object.</p>
  <p>To invoke the constructor, you use syntax that is a cross between a
    variable declaration and a function call:</p>
  <program>
Time time(seconds);
</program>
  <p>This statement declares that the variable <c>time</c> has type <c>Time</c>, and it invokes the
    constructor we just wrote, passing the value of <c>seconds</c> as an argument. The system allocates
    space for the new object and the constructor initializes its instance variables. The result is
    assigned to the variable <c>time</c>.</p>
  <exercise label="constructors_1">
    <statement>
      <p>The member function that initializes objects automatically when they are created is called
        a(n) <fillin answer="constructor"/>. </p>
    </statement>
    <evaluation>
      <evaluate>
        <test correct="yes">
          <strcmp use-answer="yes" case="insensitive"/>
        </test>
      </evaluate>
    </evaluation>
  </exercise>
  <exercise label="constructors_2">
    <statement>
      <p>Which statment is <term>false</term> about constructors?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>They initialize the instance variables of an object.</p>
        </statement>
        <feedback><p>
          Incorrect! This statement is true!
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>They have the same name as the class.</p>
        </statement>
        <feedback><p>
          Incorrect! This statement is true!
        </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>They return an instance of an object.</p>
        </statement>
        <feedback><p>
          Correct! Constructors do not have a return type.
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>We refer to the objects they initialize implicitly, or using keyword this.</p>
        </statement>
        <feedback><p>
          Incorrect! This statment is true!
        </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>They have the same name as the class, no return type and unchanged parameters.</p>
        </statement>
        <feedback><p>
          Incorrect! This statement is true!
        </p></feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="constructors_3">
    <statement>
      <p>Write code to initialize the variable <c>lunch</c> that has type <c>Time</c> and a value of 1800
        seconds. <fillin answer="Time\s+lunch\s*\(\s*1800\s*\)\s*;?"/>
      </p>
    </statement>
    <evaluation>
      <evaluate>
        <test correct="yes">
          <strcmp use-answer="yes" case="insensitive"/>
        </test>
      </evaluate>
    </evaluation>
  </exercise>
</section>
